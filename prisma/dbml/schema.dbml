//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Account {
  uid String [pk]
  identifier String [unique, not null]
  provider String [not null]
  status Boolean [not null, default: true]
  createdAt DateTime [default: `now()`, not null]
  signedAt DateTime [default: `now()`, not null]
  user User
  userRegistrationRequest UserRegistrationRequest
}

Table UserRegistrationRequest {
  id Int [pk, increment]
  email String [not null]
  name String [not null]
  gender Gender [not null]
  dateOfBirth DateTime [not null]
  status UserRegistrationRequestStatus [not null, default: 'PROCESSING']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  accountId String [unique, not null]
  account Account [not null]
}

Table User {
  id Int [pk, increment]
  email String [unique]
  status Boolean [not null, default: true]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  accountId String [unique]
  owned Company [not null]
  companyRegistrationRequests CompanyRegistrationRequest [not null]
  companies Employee [not null]
  profile Profile
  account Account
  roles Role [not null]
}

Table Employee {
  id String [not null]
  userId Int [not null]
  companyId Int [not null]
  assignedAt DateTime [default: `now()`, not null]
  company Company [not null]
  user User [not null]
  branchs EmployeeOnBranch [not null]
  departments EmployeeOnDepartment [not null]
  positions EmployeeOnPosition [not null]
  manageDepartments Department [not null]

  indexes {
    (userId, companyId) [pk]
    (id, companyId) [unique]
  }
}

Table EmployeeOnBranch {
  employeeUserId Int [not null]
  employeeCompanyId Int [not null]
  branchId Int [not null]
  branch Branch [not null]
  employee Employee [not null]

  indexes {
    (employeeUserId, employeeCompanyId, branchId) [pk]
  }
}

Table EmployeeOnDepartment {
  employeeUserId Int [not null]
  employeeCompanyId Int [not null]
  departmentId Int [not null]
  department Department [not null]
  employee Employee [not null]

  indexes {
    (employeeUserId, employeeCompanyId, departmentId) [pk]
  }
}

Table Position {
  id Int [pk, increment]
  name String [not null]
  slug String [unique, not null]
  color String
  functions String[] [not null]
  companyId Int [not null]
  employees EmployeeOnPosition [not null]
  company Company [not null]
}

Table EmployeeOnPosition {
  employeeUserId Int [not null]
  employeeCompanyId Int [not null]
  positionId Int [not null]
  employee Employee [not null]
  position Position [not null]

  indexes {
    (employeeUserId, employeeCompanyId, positionId) [pk]
  }
}

Table Profile {
  id Int [pk, increment]
  name String [not null]
  gender Gender [not null]
  dateOfBirth DateTime [not null]
  email String
  phoneNumber String
  image String
  education String
  maritalStatus String
  nationality String
  insurance String
  taxCode String
  userId Int [unique, not null]
  address Address
  idCard IdCard
  user User [not null]
}

Table Address {
  id Int [pk, increment]
  street String
  province Json [not null]
  district Json [not null]
  ward Json [not null]
  profileId Int [unique]
  companyId Int [unique]
  branchId Int [unique]
  companyRegistrationRequestId Int [unique]
  branch Branch
  company Company
  companyRegistrationRequest CompanyRegistrationRequest
  profile Profile
}

Table IdCard {
  id Int [pk, increment]
  number String [not null]
  issuePlace String [not null]
  issueDate DateTime [not null]
  profileId Int [unique, not null]
  profile Profile [not null]
}

Table Role {
  id Int [pk, increment]
  name String [not null]
  slug String [unique, not null]
  permissions String[] [not null]
  setting Setting
  users User [not null]
}

Table CompanyRegistrationRequest {
  id Int [pk, increment]
  name String [not null]
  description String
  taxCode String [not null]
  logo String
  email String
  phoneNumber String
  website String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  ownerId Int [not null]
  status CompanyRegistrationRequestStatus [not null, default: 'PROCESSING']
  address Address
  owner User [not null]
}

Table Company {
  id Int [pk, increment]
  name String [not null]
  description String
  taxCode String [not null]
  logo String
  email String
  phoneNumber String
  website String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  ownerId Int
  address Address
  branchs Branch [not null]
  owner User
  departments Department [not null]
  employees Employee [not null]
  positions Position [not null]
}

Table Branch {
  id Int [pk, increment]
  name String [not null]
  companyId Int
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  address Address
  company Company
  employees EmployeeOnBranch [not null]
}

Table Department {
  id Int [pk, increment]
  name String [not null]
  description String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  companyId Int
  company Company
  employees EmployeeOnDepartment [not null]
  manager Employee
  managerUserId Int [not null]
  managerCompanyId Int [not null]
}

Table Setting {
  id Int [pk, increment]
  roleId Int [unique]
  gender Gender [not null, default: 'OTHER']
  role Role
}

Table RoleToUser {
  rolesId Int [ref: > Role.id]
  usersId Int [ref: > User.id]
}

Enum Gender {
  OTHER
  MALE
  FEMALE
}

Enum UserRegistrationRequestStatus {
  PROCESSING
  ACCEPTED
  REJECTED
}

Enum CompanyRegistrationRequestStatus {
  PROCESSING
  ACCEPTED
  REJECTED
}

Ref: UserRegistrationRequest.accountId - Account.uid [delete: Cascade]

Ref: User.accountId - Account.uid

Ref: Employee.companyId > Company.id [delete: Cascade]

Ref: Employee.userId > User.id [delete: Cascade]

Ref: EmployeeOnBranch.branchId > Branch.id [delete: Cascade]

Ref: EmployeeOnBranch.(employeeUserId, employeeCompanyId) > Employee.(userId, companyId) [delete: Cascade]

Ref: EmployeeOnDepartment.departmentId > Department.id [delete: Cascade]

Ref: EmployeeOnDepartment.(employeeUserId, employeeCompanyId) > Employee.(userId, companyId) [delete: Cascade]

Ref: Position.companyId > Company.id [delete: Cascade]

Ref: EmployeeOnPosition.(employeeUserId, employeeCompanyId) > Employee.(userId, companyId) [delete: Cascade]

Ref: EmployeeOnPosition.positionId > Position.id [delete: Cascade]

Ref: Profile.userId - User.id [delete: Cascade]

Ref: Address.branchId - Branch.id

Ref: Address.companyId - Company.id

Ref: Address.companyRegistrationRequestId - CompanyRegistrationRequest.id

Ref: Address.profileId - Profile.id [delete: Cascade]

Ref: IdCard.profileId - Profile.id [delete: Cascade]

Ref: CompanyRegistrationRequest.ownerId > User.id

Ref: Company.ownerId > User.id

Ref: Branch.companyId > Company.id [delete: Cascade]

Ref: Department.companyId > Company.id

Ref: Department.(managerUserId, managerCompanyId) > Employee.(userId, companyId)

Ref: Setting.roleId - Role.id